[versions]
kotlin = "2.1.21"
versions = "0.52.0"
spring-boot = "3.5.0"
coroutines = "1.10.2"
sosialhjelp_common = "1.20250120.1009-d88048d"
logback = "1.5.18"
logstash = "8.1"
filformat = "1.2025.01.20-12.05-901742ed6fe0"
micrometer_registry = "1.15.0"
prometheus = "0.16.0"
jackson = "2.19.0"
commons_codec = "1.18.0"
commons_io = "2.19.0"
file_upload = "1.6.0"
tika = "3.2.0"
pdf_box = "3.0.5"
fiks_kryptering = "2.0.7"
jemp_box = "1.8.17"
unleash = "10.2.2"
springdoc = "2.8.8"
json_smart = "2.4.10"
spring_security_test = "6.5.1"
mock-oauth2-server = "2.2.1"

opentelemetry = "1.51.0"

ktlint = "1.5.0"

mockk = "1.14.2"
okhttp3 = "4.12.0"
spring_mockk = "4.0.2"
resilience4j = "2.3.0"

[libraries]
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-slf4j = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j", version.ref = "coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-starter-graphql = { module = "org.springframework.boot:spring-boot-starter-graphql", version.ref = "spring-boot" }
spring-boot-starter-logging = { module = "org.springframework.boot:spring-boot-starter-logging", version.ref = "spring-boot" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-boot-starter-oauth2-resource-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server", version.ref = "spring-boot" }

resilience4j-kotlin = { module = "io.github.resilience4j:resilience4j-kotlin", version.ref = "resilience4j" }
resilience4j-circuitbreaker = { module = "io.github.resilience4j:resilience4j-circuitbreaker", version.ref = "resilience4j" }
resilience4j-spring-boot3 = { module = "io.github.resilience4j:resilience4j-spring-boot3", version.ref = "resilience4j" }

sosialhjelp-common-api = { module = "no.nav.sosialhjelp:sosialhjelp-common-api", version.ref = "sosialhjelp_common" }

micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer_registry" }
promotheus-simpleclient-common = { module = "io.prometheus:simpleclient_common", version.ref = "prometheus" }
prometheus-simpleclient-hotspot = { module = "io.prometheus:simpleclient_hotspot", version.ref = "prometheus" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-logstash = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }

sosialhjelp-filformat = { module = "no.nav.sbl.dialogarena:soknadsosialhjelp-filformat", version.ref = "filformat" }

jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

springdoc-openapi-starter-webflux-ui = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "springdoc" }
springdoc-openapi-starter-common = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springdoc" }


fiks-kryptering = { module = "no.ks.fiks:kryptering", version.ref = "fiks_kryptering" }
unleash = { module = "io.getunleash:unleash-client-java", version.ref = "unleash" }

commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons_codec" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons_io" }
commons-fileupload = { module = "commons-fileupload:commons-fileupload", version.ref = "file_upload" }
apache-tika = { module = "org.apache.tika:tika-core", version.ref = "tika" }
apache-pdfbox-preflight = { module = "org.apache.pdfbox:preflight", version.ref = "pdf_box" }
apache-pdfbox-jempbox = { module = "org.apache.pdfbox:jempbox", version.ref = "jemp_box" }

opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api" }

spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring_security_test" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp3" }
springmockk = { module = "com.ninja-squad:springmockk", version.ref = "spring_mockk" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-jvm = { module = "io.mockk:mockk-jvm", version.ref = "mockk" }
mock-oauth2-server = { module = "no.nav.security:mock-oauth2-server", version.ref  = "mock-oauth2-server"}

[bundles]
spring-boot = [
    "spring-boot-starter-actuator",
    "spring-boot-starter-data-redis",
    "spring-boot-starter-graphql",
    "spring-boot-starter-logging",
    "spring-boot-starter-webflux",
    "spring-boot-starter-oauth2-resource-server",
]

resilience4j = [
    "resilience4j-kotlin",
    "resilience4j-circuitbreaker",
    "resilience4j-spring-boot3"
]

logging = [
    "logback-classic",
    "logback-logstash",
]

coroutines = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-reactor",
    "kotlinx-coroutines-slf4j",
    "kotlinx-coroutines-test",
]

commons = [
    "commons-codec",
    "commons-fileupload",
    "commons-io"
]

sosialhjelp-common = [
    "sosialhjelp-common-api",
]

prometheus = [
    "prometheus-simpleclient-hotspot",
    "promotheus-simpleclient-common",
    "micrometer-registry-prometheus",
]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "12.3.0" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
