version: 2

jobs:
  build:
    docker:
      - image: "circleci/openjdk:11-jdk"
    steps:
      - checkout
      - run:
          name: Create workspace
          command: mkdir -p /tmp/workspace
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
      - run:
          name: test and build
          command: ./gradlew test build
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - run:
          name: Copy jars to workspace
          command: cp build/libs/*.jar /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths: "*.jar"
  release:
    docker:
      - image: "circleci/openjdk:11-jdk"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy jar to expected path
          command: |
            cp /tmp/workspace/*.jar .
      - run:
          name: Generate version number and docker image tags
          command: |
            export GIT_COMMIT_HASH=$(git log -n 1 --pretty=format:'%h')
            export GIT_COMMIT_DATE=$(git log -1 --pretty='%ad' --date=format:'%Y%m%d.%H%M')
            export VERSION=1.0_${GIT_COMMIT_DATE}_${GIT_COMMIT_HASH}

            echo "export DOCKER_TAG=\"docker.pkg.github.com/navikt/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$VERSION\"" >> $BASH_ENV
      - run:
          name: Build docker image
          command: docker build -t $DOCKER_TAG .
      - run:
          # Push the image to Docker Packages, can also be used against dockerhub by omitting docker.pkg.github.com
          name: Docker push
          command: |
            echo "$DOCKER_GITHUB_PASSWORD" | docker login -u "$DEPLOYMENT_USERNAME" --password-stdin docker.pkg.github.com
            echo $DOCKER_TAG
            docker push $DOCKER_TAG

  deploy_dev:
    docker:
      - image: navikt/deployment-cli:v0.1.5
    steps:
      - checkout
      - setup_remote_docker
      - run: # Brukernavn og passord til Github ligger i miljøvariablene DEPLOYMENT_USERNAME og DEPLOYMENT_PASSWORD.
          name: Deploy til default dev-sbs
          command: |
            deployment-cli deploy create --cluster=dev-sbs --repository=navikt/sosialhjelp-innsyn-api --team=digisos -r=nais.yaml --version=${VERSION} --vars=nais/dev/default.json

  deploy_miljo:
    docker:
      - image: navikt/deployment-cli:v0.1.5
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Deploy versjon=${VERSION} til miljø=${MILJO} i dev-sbs
          command: |
            deployment-cli deploy create --cluster=dev-sbs --repository=navikt/sosialhjelp-innsyn-api --team=digisos -r=nais.yaml --version=${VERSION} --vars=nais/dev/${MILJO}.json

  deploy_prod:
    docker:
      - image: navikt/deployment-cli:v0.1.5
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Deploy versjon=${VERSION} til prod
          command: |
            deployment-cli deploy create --cluster=prod-sbs --repository=navikt/sosialhjelp-innsyn-api --team=digisos -r=nais.yaml --version=${VERSION} --vars=nais/prod/default.json

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build

      - release:
          context: NAIS deployment
          requires:
            - build
          filters:
            branches:
#              only: master
              only: feature/github_package_registry

      - deploy_dev:
          requires:
            - release
          filters:
            branches:
              only: master