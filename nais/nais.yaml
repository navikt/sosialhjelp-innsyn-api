apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: {{applicationName}}
  namespace: {{namespace}}
  labels:
    team: teamdigisos
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "150M"
spec:
  image: {{image}}
  port: 8080
  liveness:
    path: /sosialhjelp/innsyn-api/internal/isAlive
    initialDelay: 45
    timeout: 1
    periodSeconds: 10
    failureThreshold: 10
  readiness:
    path: /sosialhjelp/innsyn-api/internal/isReady
    initialDelay: 20
    timeout: 1
  prometheus:
    enabled: {{prometheusEnabled}}
    path: /sosialhjelp/innsyn-api/internal/prometheus
  replicas:
    min: {{minReplicas}}
    max: {{maxReplicas}}
  webproxy: {{webProxyEnabled}}
  tokenx:
    enabled: {{tokenXEnabled}}
{{#if maskinportenEnabled}}
  maskinporten:
    enabled: true
    scopes:
      consumes:
        - name: "ks:fiks"
{{/if}}
{{#if isGcp}}
  accessPolicy:
    inbound:
      rules:
      {{#each inboundRulesApplications}}
        - application: "{{this}}"
      {{else}}
        []
      {{/each}}
    outbound:
      external:
      {{#each outboundExternalHosts}}
        - host: "{{this}}"
      {{else}}
        []
      {{/each}}
      rules:
      {{#each outboundRulesApplications}}
        - application: "{{this}}"
      {{else}}
        []
      {{/each}}
        - application: "sosialhjelp-fss-proxy"
          cluster: {{fssProxyClusterName}}
{{/if}}
  ingresses:
{{#each ingress}}
    - "{{this}}"
{{/each}}
  resources:
    limits:
      cpu: {{cpuLimit}}
      memory: {{memoryLimit}}
    requests:
      cpu: {{cpuRequest}}
      memory: {{memoryRequest}}
  env:
{{#each env}}
    - name: {{@key}}
      value: "{{this}}"
{{/each}}
  envFrom:
    - configmap: loginservice-idporten
{{#each envsecret}}
    - secret: "{{this}}"
{{/each}}
