name: Build and deploy to prod
on:
  push:
    branches:
      - "master"

env:
  CI: true
  DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/$PROJECT_NAME:${{ github.sha }}

# FIXME: Legg til docker layer caching, f.eks. https://github.com/marketplace/actions/build-docker-images-using-cache
jobs:
  build:
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Run tests
        run: ./gradlew test
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: Build JAR
        run: ./gradlew clean shadowJar -x test
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to GitHub package registry
        run: |
          echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_REPOSITORY} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_IMAGE }} .
      - name: Push docker image
        run: |
          docker push ${{ env.DOCKER_IMAGE }}
  deploy:
    name: Deploy to prod-sbs
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: deploy til prod-sbs
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais.yaml
          CLUSTER: prod-sbs
          VARS: nais/prod/default.json
          REF: ${{ github.sha }}
          PRINT_PAYLOAD: true
          IMAGE: ${{ env.DOCKER_IMAGE }}
